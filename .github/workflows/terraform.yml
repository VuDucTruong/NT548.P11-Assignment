name: Terraform Deploy

on:
  push:
    branches:
      - main # Triển khai khi có push vào nhánh main
  pull_request:
    branches:
      - main

env:
  WORKING_DIRECTORY: "./Assignment01/Terraform"
  AMI_ID: ${{vars.AWS_AMI_ID}}
  REGION: ${{vars.AWS_REGION}}
  ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
  SECRET_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  DEVICE_IP: ${{vars.DEVICE_IP}}
  INSTANCE_TYPE: ${{ vars.INSTANCE_TYPE }}
  IAM_ROLE: ${{vars.IAM_ROLE}}
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6 # Chọn phiên bản Terraform

      - name: Run Terraform Init
        run: terraform init

      - name: Run Terraform Validate
        run: terraform validate

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.WORKING_DIRECTORY }}

  deploy:
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6 # Chọn phiên bản Terraform

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.ACCESS_KEY }}
          aws-secret-access-key: ${{ env.SECRET_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan
        env:
          TF_VAR_ami_id: ${{ env.AMI_ID }}
          TF_VAR_device_ip: ${{ env.DEVICE_IP }}
          TF_VAR_region: ${{env.REGION}}
          TF_VAR_instance_type: ${{env.INSTANCE_TYPE}}
          TF_VAR_iam_role: ${{env.IAM_ROLE}}
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          TF_VAR_ami_id: ${{ env.AMI_ID }}
          TF_VAR_device_ip: ${{ env.DEVICE_IP }}
          TF_VAR_region: ${{env.REGION}}
          TF_VAR_instance_type: ${{env.INSTANCE_TYPE}}
          TF_VAR_iam_role: ${{env.IAM_ROLE}}
        working-directory: ${{ env.WORKING_DIRECTORY }}
